commit test
좋아요! 다른 컴퓨터에서 작업한 내용을 GitHub에 푸시하고, 또 다른 컴퓨터에서 이어서 작업할 수 있도록 Git 워크플로우 전체 정리해드릴게요.

✅ 1. 다른 컴퓨터 A에서 레포에 올리는 절차
이 컴퓨터는 코드를 작성하고 GitHub에 올리는 쪽

▶️ A 컴퓨터에서 작업 후 GitHub에 푸시
bash
복사
편집
# 1. 변경된 파일을 Git에 추가
git add .

# 2. 커밋 메시지 작성
git commit -m "작업한 내용 커밋"

# 3. GitHub에 푸시
git push origin main  # 또는 master, 사용하는 브랜치 이름에 따라 다름
✅ 2. 다른 컴퓨터 B에서 이어서 작업할 수 있도록 하기
이 컴퓨터는 기존 레포를 복제받고 이어서 작업하는 쪽

▶️ B 컴퓨터에서 클론하기 (최초 1회)
bash
복사
편집
git clone https://github.com/사용자명/레포이름.git
cd 레포이름
✅ 3. B 컴퓨터에서 작업 후 다시 GitHub에 푸시
▶️ Git 설정 (최초 1회)
bash
복사
편집
git config --global user.name "너의 이름"
git config --global user.email "깃허브 이메일"
▶️ 작업 후 커밋 & 푸시
bash
복사
편집
git add .
git commit -m "B 컴퓨터에서 작업한 내용"
git push origin main  # 브랜치 이름 확인 후 맞게
✅ A 또는 B 컴퓨터에서 계속 이어서 작업하려면?
서로 작업을 주고받을 때는 pull 먼저 하고 시작하세요.

bash
복사
편집
# GitHub의 최신 내용을 받아오기
git pull origin main